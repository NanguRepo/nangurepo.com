import{S as A,i as B,s as C,F as D,e as F,c as G,a as H,d as w,g as L,G as T,H as Y,I as j,r as z,p as J,w as K,L as N}from"../../chunks/index-70c2f159.js";function P(l){let n,o;const a=l[7].default,s=D(a,l,l[6],null);return{c(){n=F("div"),s&&s.c()},l(e){n=G(e,"DIV",{});var i=H(n);s&&s.l(i),i.forEach(w)},m(e,i){L(e,n,i),s&&s.m(n,null),l[8](n),o=!0},p(e,[i]){s&&s.p&&(!o||i&64)&&T(s,a,e,e[6],o?j(a,e[6],i,null):Y(e[6]),null)},i(e){o||(z(s,e),o=!0)},o(e){J(s,e),o=!1},d(e){e&&w(n),s&&s.d(e),l[8](null)}}}function Q(l,n,o){let{$$slots:a={},$$scope:s}=n,{root:e=null}=n,{top:i=0}=n,{bottom:u=0}=n,{increments:f=100}=n,{value:m=void 0}=n;const _=[],g=[];let h=[],b=[],d;const I=()=>{!h.length||h.forEach(O)},y=()=>{let t=0,r=0;for(let c=0;c<_.length;c++)_[c]>t&&(t=_[c],r=c);t>0?o(1,m=r):o(1,m=void 0)},O=(t,r)=>{const c=S=>{S[0].isIntersecting;const k=S[0].intersectionRatio;_[r]=k,y()},E=i?i*-1:0,M=u?u*-1:0,R=`${E}px 0px ${M}px 0px`,V={root:e,rootMargin:R,threshold:g};b[r]&&b[r].disconnect();const v=new IntersectionObserver(c,V);v.observe(t),b[r]=v};K(()=>{for(let t=0;t<f+1;t++)g.push(t/f);h=d.querySelectorAll(":scope > *"),I()});function q(t){N[t?"unshift":"push"](()=>{d=t,o(0,d)})}return l.$$set=t=>{"root"in t&&o(2,e=t.root),"top"in t&&o(3,i=t.top),"bottom"in t&&o(4,u=t.bottom),"increments"in t&&o(5,f=t.increments),"value"in t&&o(1,m=t.value),"$$scope"in t&&o(6,s=t.$$scope)},l.$$.update=()=>{l.$$.dirty&24&&I()},[d,m,e,i,u,f,s,a,q]}class W extends A{constructor(n){super(),B(this,n,Q,P,C,{root:2,top:3,bottom:4,increments:5,value:1})}}export{W as default};
